#	vim: set tabstop=4 columns=120 shiftwidth=4:
#-----------------------------------------------------------------------------------------------------------------------
#	MBRadio
#
#	TODO List.   Please set your tab width to 4 characters!
#-----------------------------------------------------------------------------------------------------------------------

#	TASK/STATUS		COMMENTS
------------------------------------------------------------------------------------------------------------------------
1.	TO DO			Objc app needs to query the python proxy to get the list of new requests.
	(Jonathan)		This can be done by sending an HTTP GET request to http://localhost:15800/new-requests/
	
	STATUS			Incomplete
	
2.	INVESTIGATE		I am concerned what happens in iTunes if new tracks are added to the library while the person
	(Erich)			is DJing. I do not believe the "Track ID" numbers remain consistent if the library is updated
					with new songs.
					
					However, I notice that there is a <key>Persistent ID</key> in the iTunes XML DB.
					
					Should we be using this ID instead of what is found in the Track ID field???
					
					Is it possible to add the correct track in iTunes (with your little applescript) using this
					Persistent ID instead of the regular Track ID??
	
	FOLLOWUP		As long as you can play the track from Applescript with the Persistent ID, let's do that.
	(Erich)
	
3.	INVESTIGATE		We need a way to store configuration variables that can be read/written by both the objc app
	(Jonathan)		and python.
					
					*IDEA* Use one of those .plist files?  Both ObjC and Python can read those.
					
					Example configutation data:
						serverPort
						maxRequests_UserPerHour
						maxRequests_ArtistPerHour
						maxRequests_AlbumPerHour
					
					*IDEA* Perhaps the GUI could have a "Config" pane/tab where one could enter this information?
						The ObjC app would then write these options to .plist config file.
					
					The python app could either periodically poll the config file to see if it has changed, or the ObjC
					app could send some kind of command to the proxy server like an HTTP GET request to
						http://localhost:15800/reload-config/
					whenever the config options are changed.
	
	FOLLOWUP		I implemented the 'http://localhost:15800/reload-config' interface in python.
	(Erich)
	
	TO DO			Once we decide how the configurations are stored, the corresponding code must be written in
	(Erich)			the pythan script to read the config information.
	
	RESULT			?
		
		
4a.	INVESTIGATE		Can we investigate if there is a way to pull information from iTunes about the song that is
					currently playing?

	FOLLOWUP		Yes, currently playing song can be queried from iTunes with Applescript.
	(Jonathan)
	
	FOLLOWUP		Good. Let's implement this with a timer. Every X seconds, poll iTunes for the currently playing
	(Erich)			song. If the song is different than the result of the previous poll, then the ObjC app will send
					the SongID to the python server for recording and tracking via the 
					'http://localhost:15800/now-playing?songid=X'  interface.

	RESULT			?

4b.	INVESTIGATE		Also, is there a way to pull from iTunes a list of tracks that have recently been played?
					Say I want to know "What where the last 10 tracks played in iTunes" so that I can display
					this information on the website.
					
	FOLLOWUP		Last 10 tracks played may be doable with so called smart playlists. But it smells fishy. 
	(Jonathan)		I have no idea if those can be created programmatically or not.

	FOLLOWUP		Let's ignore this for now, then. Instead, let's use the simple polling method that fires every X
	(Erich)			seconds and pulls the "currently playing" song from iTunes. The ObjC app will report this
					to the python server via the 'http://localhost:15800/now-playing?songid=X'  interface.  The python
					app will maintain the list of "recently played songs" for querying. The played songs will be stored
					in memory for the current session, and also logged to a file on the disk for statistics purposes
					at a later time.

	RESULT			?
	
5	TO DO			Implement the 'http://localhost:15800/now-playing?songid=X'  interface from the ObjC program.
	(Jonathan)
	
	STATUS			Incomplete